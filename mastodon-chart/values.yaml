image:
  repository: ghcr.io/mastodon/mastodon
  pullPolicy: IfNotPresent
  tag: "v4.2.1"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: { }

podAnnotations: { }

podSecurityContext:
  fsGroup: 991
  runAsGroup: 991
  runAsUser: 991

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 991

configuration:
  database:
    host: tootcommunity-pgbouncer.tootcommunity.svc.cluster.local
    name: app
    poolsize: 25
    port: 6432
    dbMigrations: # to circumvent pgpooler
      port: 5432
      name: app
      host: dbs-toot-community-1.private.toot.community
    sslmode: require
    runDatabaseMigrations: true
  databaseReplicas:
    enabled: false
    hosts:
      - private-db-postgresql-ams3-toot-community-ro-0-do-user-924064-0.b.db.ondigitalocean.com
  defaultLocale: en
  localDomain: toot.community
  allowedPrivateAddresses: 10.245.0.0/16
  redis:
    host: dbs-toot-community-1.private.toot.community
    port: 6379
    database: 0
  s3:
    aliasHost: static.toot.community
    bucket: static-toot-community
    endpoint: https://ams3.digitaloceanspaces.com
    hostname: ams3.digitaloceanspaces.com
    region: ams3
    protocol: https
    timeouts:
      open: 10
      read: 10
  smtp:
    authMethod: plain
    caFile: /etc/ssl/certs/ca-certificates.crt
    deliveryMethod: smtp
    enableStarttlsAuto: true
    opensslVerifyMode: none
    port: 587
    domain: ses.toot.community
    fromAddress: toot.community Notifications <notifications@ses.toot.community>
    smtpServer: email-smtp.eu-west-1.amazonaws.com
  search:
    enabled: true
    host: tootcommunity-search-es-http
    port: 9200
    scheme: http
    preset: single_node_cluster # https://github.com/mastodon/documentation/pull/1279/files
    user: elastic
    password:
      secretKeyRef:
        name: tootcommunity-search-es-elastic-user
        key: elastic

web:
  domain: toot.community
  concurrency: 8
  maxThreads: 5
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      memory: 4Gi # higher due to the need to convert big images using ImageMagick
  startupProbe:
    httpGet:
      port: http
      path: /health
    periodSeconds: 3
    failureThreshold: 30
  readinessProbe:
    failureThreshold: 3
    httpGet:
      path: /health
      port: http
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  annotations: ~
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  podDisruptionBudget:
    enabled: true
    minAvailable: 2

translations:
  enabled: true
  deepl:
    plan: free

streaming:
  replicaCount: 4
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  readinessProbe:
    failureThreshold: 3
    httpGet:
      path: /api/v1/streaming/health
      port: streaming
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  startupProbe:
    httpGet:
      port: streaming
      path: /api/v1/streaming/health
    periodSeconds: 3
    failureThreshold: 30
  resources:
    requests:
      cpu: 6m
      memory: 202M
    limits:
      memory: 202M
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  podMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    port: streaming
    scheme: http
  annotations: ~
  redis:
    url: redis://dbs-toot-community-1.private.toot.community:6379
  baseURL: wss://streaming.toot.community

sidekiq:
  # nodeSelector:
  #  doks.digitalocean.com/node-pool: pool-sidekiq-3
  # tolerations:
  #   - effect: NoSchedule
  #     key: limit
  #     operator: Equal
  #     value: sidekiq
  workers:
    - name: generic
      concurrency: 25
      replicaCount: 3
      queues:
        - default
        - ingress
        - push
        - pull
      resources:
        requests:
          cpu: 1500m
          memory: 1000M
        limits:
          memory: 1800M
    - name: default
      concurrency: 25
      queues:
        - default
      resources:
        requests:
          cpu: 1000m
          memory: 1000M
        limits:
          memory: 1800M
    - name: ingress
      concurrency: 25
      queues:
        - ingress
      resources:
        requests:
          cpu: 1000m
          memory: 1000Mi
        limits:
          memory: 1800Mi
    - name: pull
      concurrency: 25
      queues:
        - pull
      resources:
        requests:
          cpu: 1000m
          memory: 1000M
        limits:
          memory: 1800M
    - name: push
      concurrency: 25
      queues:
        - push
      resources:
        requests:
          cpu: 500m
          memory: 500Mi
        limits:
          memory: 1000Mi
    - name: mailers
      concurrency: 25
      replicaCount: 1
      queues:
        - mailers
      resources:
        requests:
          cpu: 100m
          memory: 250Mi
        limits:
          memory: 500Mi
    - name: scheduler
      concurrency: 25
      replicaCount: 1
      queues:
        - scheduler
      resources:
        requests:
          cpu: 250m
          memory: 1000Mi
        limits:
          memory: 1800Mi

ingress:
  web:
    maxBodySize: 100m
    upstreamProxyTimeout: 120
    ingressClassName: nginx
    host: toot.community
    verifyClient:
      enabled: true
      secretName: tootcommunity/tootcommunity-ca-secret
    tls:
      - hosts:
          - toot.community
        secretName: toot.community-tls
  streaming:
    host: streaming.toot.community
    ingressClassName: nginx
    tls:
      - hosts:
          - streaming.toot.community
        secretName: streaming.toot.community-tls

jobs:
  annotations:
    linkerd.io/inject: disabled
  cleanupMedia:
    enabled: true
    schedule: "0 5 * * *" # every day at 5am
    days: 7
    resources:
      requests:
        cpu: 254m
        memory: 451M
      limits:
        memory: 451M
  statusesRemove:
    enabled: true
    schedule: "5 4 * * 6"
    days: 90
    resources:
      requests:
        cpu: 300m
        memory: 1500M
      limits:
        memory: 1500M
  cleanupMediaProfiles:
    enabled: true
    schedule: "0 5 * * *" # every day at 5am
    days: 7
    resources:
      requests:
        cpu: 1000m
        memory: 721M
      limits:
        memory: 721M
  psqlBackup:
    enabled: false
    schedule: "0 3 * * *"
    s3:
      endpoint: https://ams3.digitaloceanspaces.com
      bucket: db-backup-toot-community
    resources:
      requests:
        cpu: 1000m # compression-heavy workload
    postgresImage:
      repository: postgres
      tag: 15-alpine
      pullPolicy: IfNotPresent
    overrideDatabaseInfo: # to bypass the pool
      name: app
      port: 5432
      host: dbs-toot-community-1.private.toot.community
    awsCliImage:
      repository: amazon/aws-cli
      tag: latest
      pullPolicy: IfNotPresent
  accountsPrune:
    enabled: true
    schedule: "0 2 * * 1" # every monday at 2am
    resources:
      requests:
        cpu: 1033m
        memory: 584M
      limits:
        memory: 584M
  removePreviewCards:
    enabled: true
    schedule: "0 5 * * 1" # every monday at 5am
    resources:
      requests:
        cpu: 500m
        memory: 400Mi
      limits:
        memory: 400Mi
    days: 180

onePassword:
  - suffix: secrets-env
    itemPath: vaults/dhwqy3tub7zdwf2zj6cv4lprlu/items/oezhcrluaumwwkrwulo62wnmhe
  - name: db-backup-toot-community-creds
    itemPath: vaults/dhwqy3tub7zdwf2zj6cv4lprlu/items/2pry55mb7zpdtbssb4iohrc3iy
  - name: client-verify-ca
    itemPath: vaults/dhwqy3tub7zdwf2zj6cv4lprlu/items/inkjop6yia45h7ttvv4cdt656e
  - name: tootcommunity-ca-secret
    itemPath: vaults/dhwqy3tub7zdwf2zj6cv4lprlu/items/inkjop6yia45h7ttvv4cdt656e
  - name: tootcommunity-tls-secret
    itemPath: vaults/dhwqy3tub7zdwf2zj6cv4lprlu/items/55ne3om63nhotaml7krbtwswou

keda:
  prometheusAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
  redis:
    address: dbs-toot-community-1.private.toot.community:6379
    tls:
      enabled: true
      index: 0
  web:
    enabled: true
    cooldownPeriod: 30
    maxReplicaCount: 40
    minReplicaCount: 2
    pollingInterval: 15
    fallback:
      enabled: true
      replicas: 5
      failureThreshold: 4 # allows prometheus to be down for (4 * 15) seconds before going to fallback
    ignoreNullValues: false
    threshold: 20
    advanced:
      horizontalPodAutoscalerConfig:
        behavior:
          scaleDown:
            policies:
              - type: Percent
                value: 25
                periodSeconds: 60
            stabilizationWindowSeconds: 120
    memoryUtilizationScaling:
      enabled: false
      targetAverageUtilization: 225
  streaming:
    enabled: true
    cooldownPeriod: 30
    maxReplicaCount: 20
    minReplicaCount: 2
    pollingInterval: 15
    fallback:
      enabled: true
      replicas: 3
      failureThreshold: 4
    ignoreNullValues: false
    threshold: 1000
  workers:
    enabled: true
    cooldownPeriod: 300
    maxReplicaCount: 10
    minReplicaCount: 0
    pollingInterval: 10
    fallback:
      enabled: true
      replicas: 3
      failureThreshold: 4
    advanced:
      horizontalPodAutoscalerConfig:
        behavior:
          scaleDown:
            stabilizationWindowSeconds: 300
            policies:
              - type: Pods
                value: 1
                periodSeconds: 60
          scaleUp:
            stabilizationWindowSeconds: 30
            policies:
              - type: Pods
                value: 1
                periodSeconds: 30
    queues:
      - name: default
        latencyThreshold: 5
        enqueuedJobsThreshold: 500
        queue: default
      - name: ingress
        latencyThreshold: 10
        enqueuedJobsThreshold: 500
        queue: ingress
      - name: pull
        latencyThreshold: 10
        enqueuedJobsThreshold: 500
        queue: pull
      - name: push
        latencyThreshold: 10
        enqueuedJobsThreshold: 500
        queue: push
