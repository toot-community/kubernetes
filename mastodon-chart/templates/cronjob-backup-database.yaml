{{ if .Values.jobs.psqlBackup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "mastodon.fullname" . }}-psql-backup
  labels:
    {{- include "mastodon.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.jobs.psqlBackup.schedule }}
  jobTemplate:
    spec:
      template:
        metadata:
          name: {{ include "mastodon.fullname" . }}-psql-backup
        spec:
          restartPolicy: Never
          volumes:
            - name: backup-dir
              emptyDir: { }
          serviceAccountName: {{ include "mastodon.serviceAccountName" . }}
          containers:
            - name: {{ include "mastodon.fullname" . }}-create-database-backup
              image: {{ .Values.jobs.psqlBackup.postgresImage.repository }}:{{ .Values.jobs.psqlBackup.postgresImage.tag }}
              imagePullPolicy: {{ .Values.jobs.psqlBackup.postgresImage.pullPolicy }}
              {{- if .Values.jobs.psqlBackup.resources }}
              resources:
                {{- toYaml .Values.jobs.psqlBackup.resources | nindent 16 }}
              {{- end }}
              command:
                - bash
                - -c
                - "NAME=mastodon-db-$(date +%Y-%m-%d).dump && pg_dump --host=$DB_HOST --port=$DB_PORT --username=$DB_USER --dbname=$DB_NAME --format=c --file=/backup/in_progress-$NAME && mv /backup/in_progress-$NAME /backup/complete-$NAME"
              volumeMounts:
                - mountPath: /backup
                  name: backup-dir
              env:
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "mastodon.fullname" . }}-secrets-env
                      key: DB_PASS
                - name: DB_HOST
                  value: {{ .Values.jobs.psqlBackup.overrideDatabaseInfo.host }}
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "mastodon.fullname" . }}-secrets-env
                      key: DB_USER
                - name: DB_NAME
                  value: {{ .Values.jobs.psqlBackup.overrideDatabaseInfo.name | default .Values.configuration.database.name }}
                - name: DB_PORT
                  value: {{ .Values.jobs.psqlBackup.overrideDatabaseInfo.port | default .Values.configuration.database.port | quote }}
            - name: {{ include "mastodon.fullname" . }}-transfer-postgres-backup
              image: {{ .Values.jobs.psqlBackup.awsCliImage.repository }}:{{ .Values.jobs.psqlBackup.awsCliImage.tag }}
              imagePullPolicy: {{ .Values.jobs.psqlBackup.awsCliImage.pullPolicy }}
              command:
                - bash
                - -c
                - "until ls /backup/ | grep complete-; do echo 'waiting for complete backup..'; sleep 3; done && aws --endpoint={{ .Values.jobs.psqlBackup.s3.endpoint }} s3 cp /backup/* s3://{{ .Values.jobs.psqlBackup.s3.bucket }}"
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "mastodon.fullname" . }}-secrets-env
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "mastodon.fullname" . }}-secrets-env
                      key: AWS_SECRET_ACCESS_KEY
              volumeMounts:
                - mountPath: /backup
                  name: backup-dir
{{ end }}
